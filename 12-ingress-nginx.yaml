---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ingress-nginx
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
rules:
- apiGroups:
  - ''
  resources:
  - configmaps
  - endpoints
  - nodes
  - pods
  - secrets
  verbs:
  - list
  - watch
- apiGroups:
  - ''
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - ''
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ''
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - extensions
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: ingress-nginx
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
rules:
- apiGroups:
  - ''
  resources:
  - configmaps
  - pods
  - secrets
  - namespaces
  verbs:
  - get
- apiGroups:
  - ''
  resources:
  - configmaps
  resourceNames:
  - ingress-controller-leader-nginx
  verbs:
  - get
  - update
- apiGroups:
  - ''
  resources:
  - configmaps
  verbs:
  - create
- apiGroups:
  - ''
  resources:
  - endpoints
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: ingress-nginx
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: ingress-nginx
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
      annotations:
        prometheus.io/port: '10254'
        prometheus.io/scrape: 'true'
    spec:
      serviceAccountName: ingress-nginx
      containers:
        - name: ingress-nginx-controller
          image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.25.1
          args:
            - /nginx-ingress-controller
            - --annotations-prefix=nginx.ingress.kubernetes.io
            - --configmap=$(POD_NAMESPACE)/nginx-configuration
            - --default-backend-service=default/default-backend
            - --default-ssl-certificate=default/default-cert
            - --publish-service=$(POD_NAMESPACE)/ingress-nginx
            - --tcp-services-configmap=$(POD_NAMESPACE)/tcp-services
            - --udp-services-configmap=$(POD_NAMESPACE)/udp-services
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              drop:
              - ALL
              add:
              - NET_BIND_SERVICE
            runAsUser: 33
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          ports:
          - name: http
            containerPort: 80
          - name: https
            containerPort: 443
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
      hostNetwork: true
---
kind: Service
apiVersion: v1
metadata:
  name: ingress-nginx
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
spec:
  type: NodePort
  selector:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
  ports:
    - name: http
      port: 80
      targetPort: http
    - name: https
      port: 443
      targetPort: https
# https://kubernetes.github.io/ingress-nginx/deploy/validating-webhook/
# ---
# apiVersion: certmanager.k8s.io/v1alpha1
# kind: Issuer
# metadata:
#   name: ingress-nginx-webhook-selfsign
#   namespace: ingress-nginx
#   labels:
#     app.kubernetes.io/name: webhook
#     app.kubernetes.io/part-of: ingress-nginx
# spec:
#   selfSigned: {}
# ---
# apiVersion: certmanager.k8s.io/v1alpha1
# kind: Certificate
# metadata:
#   name: ingress-nginx-webhook-ca
#   namespace: ingress-nginx
#   labels:
#     app.kubernetes.io/name: webhook
#     app.kubernetes.io/part-of: ingress-nginx
# spec:
#   secretName: ingress-nginx-webhook-ca
#   duration: 43800h # 5 years
#   issuerRef:
#     name: ingress-nginx-webhook-selfsign
#   commonName: ca.webhook.ingress-nginx
#   isCA: true
# ---
# apiVersion: certmanager.k8s.io/v1alpha1
# kind: Issuer
# metadata:
#   name: ingress-nginx-webhook-ca
#   namespace: ingress-nginx
#   labels:
#     app.kubernetes.io/name: webhook
#     app.kubernetes.io/part-of: ingress-nginx
# spec:
#   ca:
#     secretName: ingress-nginx-webhook-ca
# ---
# apiVersion: certmanager.k8s.io/v1alpha1
# kind: Certificate
# metadata:
#   name: ingress-nginx-webhook-webhook-tls
#   namespace: ingress-nginx
#   labels:
#     app.kubernetes.io/name: webhook
#     app.kubernetes.io/part-of: ingress-nginx
# spec:
#   secretName: ingress-nginx-webhook-webhook-tls
#   duration: 8760h # 1 year
#   issuerRef:
#     name: ingress-nginx-webhook-ca
#   dnsNames:
#   - ingress-nginx-webhook
#   - ingress-nginx-webhook.ingress-nginx
#   - ingress-nginx-webhook.ingress-nginx.svc
# ---
# apiVersion: admissionregistration.k8s.io/v1beta1
# kind: ValidatingWebhookConfiguration
# metadata:
#   name: ingress-nginx-webhook
#   labels:
#     app.kubernetes.io/name: webhook
#     app.kubernetes.io/part-of: ingress-nginx
#   annotations:
#     certmanager.k8s.io/inject-apiserver-ca: 'true'
# webhooks:
# - name: validate.nginx.ingress.kubernetes.io
#   rules:
#   - apiGroups:
#     - extensions
#     apiVersions:
#     - v1beta1
#     operations:
#     - CREATE
#     - UPDATE
#     resources:
#     - ingresses
#   failurePolicy: Fail
#   clientConfig:
#     service:
#       namespace: ingress-nginx
#       name: ingress-validation-webhook
#       path: /extensions/v1beta1/ingress
